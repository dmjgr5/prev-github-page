I" <p><img src="/assets/images/python.png" alt="example" /></p>

<blockquote>
  <p>This is the document for Python, which is basic instruction like Python Installation, Data Types and so on. Let me explain briefly about Python language.</p>
</blockquote>

<hr />

<h3 id="python-installation">Python Installation</h3>

<ul>
  <li>Using python IDLE <a href="https://www.python.org/">https://www.python.org</a>
    <ul>
      <li>
        <p>Using Visual Studio Code after extension installation [https://code.visualstudio.com] (https://code.visualstudio.com/)</p>

        <ul>
          <li><code class="language-plaintext highlighter-rouge">git init .</code> : initialize .git called git repository</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>register user information
    <ul>
      <li><code class="language-plaintext highlighter-rouge">git config --global user.name "myname"</code></li>
      <li><code class="language-plaintext highlighter-rouge">git config --global user.email "abc@gmail.com"</code></li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">git status</code> : working tree status</li>
  <li><code class="language-plaintext highlighter-rouge">git add &lt;filename&gt;</code> : add to Staging Area
    <ul>
      <li><code class="language-plaintext highlighter-rouge">git add . </code>: all files added in current folder, but at least add FIRST</li>
    </ul>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">git commit -m "history comment" </code>: goes to Repository, create version</p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">git commit -am "filename"</code> : add &amp; commit at once</li>
  <li><code class="language-plaintext highlighter-rouge">git log</code> : shows file version</li>
  <li><code class="language-plaintext highlighter-rouge">git log stat</code> : show file version history</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">git diff</code>  : shows differences</p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">git checkout &lt;[VersionNumber]&gt;</code> : go back to previous version</li>
  <li><code class="language-plaintext highlighter-rouge">git checkout master</code> : go to latest version</li>
  <li><code class="language-plaintext highlighter-rouge">git reset --hard [VersionNumber]</code> : reset to [VersionNumber] version, strongly deleted.</li>
  <li><code class="language-plaintext highlighter-rouge">.gitignore</code> : ignore fires listed in .gitignore file</li>
</ul>

<h3 id="branch-and-conflict">Branch and Conflict</h3>
<ul>
  <li>git branch : make branch</li>
  <li>git checkout : go to the branch name, changes HEAD</li>
  <li>base : common ancestor between branches</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)

$

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)

$ git log --graph --oneline  # shows oneline
* 8f928c8 (HEAD -&gt; master) work 3
* 185a6da work 2
* d06d25d work 1

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ git branch
* master

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ git branch apple # make apple branch

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ git branch
  apple
* master

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ git branch
  apple
* master

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ git log --graph --oneline
* 8f928c8 (HEAD -&gt; master, apple) work 3
* 185a6da work 2
* d06d25d work 1

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ git branch google

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ git branch
  apple
  google
* master

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ git branch ms

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ git log --graph --oneline
* 8f928c8 (HEAD -&gt; master, ms, google, apple) work 3
* 185a6da work 2
* d06d25d work 1

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ nano work.txt

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ git commit -am "master work 4"
warning: LF will be replaced by CRLF in work.txt.
The file will have its original line endings in your working directory
[master 375e49a] master work 4
 1 file changed, 1 insertion(+)

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ git log --graph --oneline
* 375e49a (HEAD -&gt; master) master work 4
* 8f928c8 (ms, google, apple) work 3
* 185a6da work 2
* d06d25d work 1

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (master)
$ git checkout apple
Switched to branch 'apple'

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (apple)
$ git log --graph --oneline
* 8f928c8 (HEAD -&gt; apple, ms, google) work 3
* 185a6da work 2
* d06d25d work 1

samsung1@samsung MINGW64 ~/Desktop/gitStudyFolder/manual (apple)
$ git checkout master
Switched to branch 'master'
</code></pre></div></div>
:ET